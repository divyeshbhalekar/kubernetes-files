apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: dlp-response-handler
    keel.sh/policy: all
  name: dlp-response-handler
  namespace: microsec-system
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dlp-response-handler
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: dlp-response-handler
    spec:
      containers:
      - env:
        - name: RABBITMQ_USERNAME
          value: microsec
        - name: RABBITMQ_PASSWORD
          value: LZiHYXR5AGn1Qvz
        - name: RABBITMQ_HOST
          value: rabbitmq.rabbitmq-system
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_QUEUE
          value: response_handler
        - name: RABBITMQ_VIRTUAL_HOST
          value: /
        - name: EXCHANGE_NAME
          value: response_handler
        - name: HOST
          value: 0.0.0.0
        image: gcr.io/msec-001/dlp-response-handler:v1.4.0
        imagePullPolicy: Always
        name: dlp-response-handler
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          limits:
            cpu: 180m
            memory: 336081190912m
          requests:
            cpu: 45m
            memory: 80Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: dlp-response-handler
  name: dlp-response-handler
  namespace: microsec-system
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    k8s-app: dlp-response-handler
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: prometheus-server
  namespace: monitoring
spec:
  gateways:
  - microsec-gateway
  hosts:
  - dapis.microsec.ai
  http:
  - match:
    - uri:
        prefix: /prometheus-server/
    rewrite:
      uri: /
    route:
    - destination:
        host: prometheus-server
        port:
          number: 9090
